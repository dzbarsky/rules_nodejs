load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load("//nodejs/private:toolchains_repo.bzl", "PLATFORMS")
load("//nodejs/private:user_build_settings.bzl", "user_args")
load("//nodejs/private:current_node_cc_headers.bzl", "current_node_cc_headers")

exports_files([
    "index.for_docs.bzl",
    "providers.bzl",
])

bzl_library(
    name = "index.for_docs",
    srcs = glob(["*.bzl"]) + ["@bazel_tools//tools:bzl_srcs"],
    visibility = ["//visibility:public"],
    deps = [
        "//nodejs/private:bzl",
        "//nodejs/private/providers:bzl",
        "@bazel_skylib//lib:paths",
    ],
)

# This is the target rule authors should put in their "toolchains"
# attribute in order to get a node interpreter for the correct
# platform.
# See https://docs.bazel.build/versions/main/toolchains.html#writing-rules-that-use-toolchains
toolchain_type(
    name = "toolchain_type",
    visibility = ["//visibility:public"],
)

[
    platform(
        name = key,
        constraint_values = values.compatible_with,
    )
    for key, values in PLATFORMS.items()
]

# Default arguments/flags that are passed to nodejs in all nodejs_binary and
# nodejs_test targets. Can be overwritten by settings
# --@rules_nodejs//nodejs:default_args="--flag1 --flag2"
user_args(
    name = "default_args",
    build_setting_default = "--preserve-symlinks",
    visibility = ["//visibility:public"],
)

# Provides the currently active Node toolchain's C++ headers.
#
# Note, "node.h" is only usable from C++, and you'll need to
# ensure you are compiling with c++14 or later.
#
# Also, on Windows, NodeJS releases do not ship headers, so this rule is currently
# not usable with the built-in toolchains. If you define your own toolchain on Windows,
# you can include the headers and then this rule will work.
#
# To use, simply depend on this target where you would have wanted the
# toolchain's underlying `:headers` target:
#
# ```starlark
# cc_library(
#     name = "foo",
#     srcs = ["foo.cc"],
#     # If toolchain sets this already, you can omit.
#     copts = ["-std=c++14"],
#     deps = ["@rules_nodejs//:current_node_cc_headers"]
# )
# ```
cc_library(
    name = "current_node_cc_headers",
    hdrs = [":current_node_cc_headers_filegroup"],
    includes = ["bin/nodejs/include/node"],
    visibility = ["//visibility:public"],
)

current_node_cc_headers(
    name = "current_node_cc_headers_filegroup",
)
